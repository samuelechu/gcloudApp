package main

import (
	 "fmt"
    //"sync"
    "time"
)

func work(c chan int, source_token, dest *string,){
	
	for i := 0; i < 1000; i++ {
        	select {
        		case <-time.After(2 * time.Second):
            		fmt.Println("Doing some work ", i)

        		// we received the signal of cancelation in this channel    
        		case i := <-c:
            		fmt.Println("Cancel the context ", i)
			*source_token = "bro"
			*dest = "woo"
			c <- 50
            		return
        	}
    	}

}

func main() {

	//var wg sync.WaitGroup
	//wg.Add(1)
	var source_token, dest string
	c := make(chan int)
	go work(c,&source_token, &dest)
	
	select {
		case <-time.After(10 * time.Second):
			fmt.Println("Cancelling")
			c <- 4
		
	
	}
	
	val := <-c
	fmt.Printf("Exiting with %v, %v, %v", val, source_token, dest)
	//wg.Wait()
	
	

}



2017/09/17 06:25:42 Error: insertMessage failed for message 1152b9a613d9745f
2017/09/17 06:25:42 inserted failed message 1152b9a613d9745f


2017/09/17 06:33:56 Error: insertMessage failed for message 13f176dd7f5dbc20
2017/09/17 06:33:56 inserted failed message 13f176dd7f5dbc20

2017/09/17 06:34:06 Error: insertMessage failed for message 1407525d5d9fd73f
2017/09/17 06:34:07 inserted failed message 1407525d5d9fd73f
